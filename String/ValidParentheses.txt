question 20 leetcode

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'

Approach:-
string ko stack me store kera te jao 
if opening brackets hai to push kete jao 
else agar closing brackets hai to pop kerte jao 

in else ek check kerna agar pop se pehle ki agar closing bracket aara hai to top pe usi ka opening bracket hona chahiye or string empty nahi honi chahiye 

if sare elements push pop hojate hai to stack empty rena chahiye last me agar asa hai to true return ker do nahi to false



Solution:-

class Solution {
public:
    bool isValid(string s) {
      stack<char> st;
      for(char c : s){
        if(c=='{'||c=='('||c=='['){
            st.push(c);
        }
        else {
            if(st.empty()||(c==')'&&st.top()!='(')||(c=='}'&&st.top()!='{')||(c==']'&&st.top()!='[')){
                return false;
            }
            st.pop();

        }
      }
      return st.empty();
    }
};