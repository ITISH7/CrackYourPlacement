Leetcode 22

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

 

Example 1:

Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]
Example 2:

Input: n = 1
Output: ["()"]
 
 Solution:- 
 class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string>ans;
        func(ans,n,0,0,"");
        return ans;
    }
    void func(vector<string> &ans , int n , int open , int close , string s){
        if(s.size()==n*2 ){
            ans.push_back(s);
            return;
        }
        if(open<n){
            func(ans,n,open+1,close,s+"(");
        }
        if(close<open){
            func(ans,n,open,close+1,s+")");
        }
    }
};