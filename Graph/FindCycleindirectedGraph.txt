class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool dfs(int node , int visited[], vector<int> adj[],int pathvisited[]){
        visited[node]=1;
        pathvisited[node]=1;
        for(auto it : adj[node]){
            if(!visited[it]){
                if(dfs(it,visited,adj,pathvisited)==true){
                    return true;
                }
            }
            else if(pathvisited[it]==1){
                return true;
            }
        }
        pathvisited[node]=0;
        return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        int visited[V]={0};
        int pathvisited[V]={0};
        for(int i=0;i<V;i++){
            if(!visited[i]){
                if(dfs(i,visited,adj,pathvisited)==true){
                    return true;
                }
            }
        }
        return false;
    }
};